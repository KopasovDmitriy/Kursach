<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8
        AAAD60lEQVRIS71VW2yTZRh+L9QbL/RGTLwwJiTGeEVi5E6viIkxeIIhDIcynUU3rYMQhSh2hqgETByg
        WQyLJzQw4wEYnRtdpOmc1c1lYx1kKVnZ2m4eZtf1sHU9PT7vF/u7QmspJj7Jl//v/7fv8z7Pe6jgf0BF
        knw+j0wmg4PHf8Q7/WHsdofwyekh5HI58+5qUJZEgyQSCbQFgVcu5LFpIIc1nhzucWVxV1cGd5xK4/aT
        aZNAJZQkyWazaA/lsP1cCg97kljljGHFtxlcdywDOZSC7E9C9sYhLVGII4I7NxywVGly93bHi1ReQZJO
        p9EayKDupwRWd0Wx4vgspHUKstsHaRqCPPszZCuvL0YgjX9AXvgNsi2MV/d/blSJ/SLktYuGrIAiEv1S
        ayCNnp4eDAwMIBAIYGZmBtPT0/D7/eaZ1PT+czZ7SfIr5PlpiC0IaQhAnvNDtgyXJ4nH4wgGg+Z6eWH1
        fnFxEZOTk5D1TsiG7yAbeyC1ZyAvkchOInsY0kzV9eeN5QUUkVweuBT0x6pONndBnibJM1RkOwt5nc9a
        aN/e32nlRFFDlCx8JSiRKpYmBt/ZD9nzC+StUcj7JGmPsRlm/juJqo1G2VlvsEYHzkPaJhicNn1GyzrZ
        fUdipoEKqJpECebn5yFvsssOXoB8wEIfYcGPsh5f0ioXlbTHsbS09PcvqiAp1EozHB8fh9vthsfjgdfr
        xeDgIIaHhzE2NmbeqZUllWiQdyeysA0t4QH3Au7ujOOWjihu+PRPDh8zdfhMdvq9VCqFhYUF0216r0ff
        6dHgWo9CUgqLRIu56hJwqzeNG7vpa/scZB9bcxf9bhw1s7I8u2pgkWiAm/rzkFM8h+j5Hk669n2DH6FQ
        6JoJFBaJSpaOLOQwTwvvm2kT14XUs7BPnSua4GphkajHZvk5FiE7Ehwo2tXA6d7KFt3CXVXbXzTF1cAi
        0VUiDtrUzOBNtMrGnm+4BHlykAQ/QJ74nqvkTFnbtND6buX99VeotkhM79u5GraFUNP4NhWMG5ukjiR1
        nIl1ndxZJ7kYedafQDKZNN2kHWYG8z4HZPUOTE1NlSeZm6MCblAtciQSwW2Pt0E2eUz2UsM9tbGbqty8
        /5rPvqGyr3h/DPLYR5CHDkPW7MPIyEhJpYZEpWrgcDhsGqDwufVjZv1IB2TtUcijXzDwCaqjbTbuqpf5
        v7GTlu6aw8raD80glrPSUqKyl68CJYrFYvD5fLh57XuQB5ntOpLVnaZi1sg+iuu3++B0Oo1F/9YUFkk5
        aHazs7Mm076+PrhcLvT29po/MA2uyS2f7lKoSFKABtJsdWXotVLg5bhqkmsH8BfhfoGAuGGvjwAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>